/**
 * Engagement Lab SCSS Mixin Library
 * 
 * created by Johnny Richardson
 * 2017-19
 * ==========
 */

//  You must specify these vars before importing this package:
$cloudinary-account: 'cloudinary' !default;
$cdn-product: 'homepage' !default;

@import 'src/_animation';
@import 'src/_breakpoint';
@import 'src/_placeholder';
@import 'src/_pxem';
@import 'src/_transforms';

// This will be in node_modules root
@import '../../sass-mq/mq';

/// Apply any type of filter to element.
/// @example scss
///     @include(filter(grayscale, 100%)), etc:
///         sepia    -> sepia(100%);
///         saturate -> saturate(0%);
///     hue-rotate     -> filter: hue-rotate(45deg);
///     invert         -> filter: invert(100%);
///     brightness     -> filter: brightness(15%);
///     contrast       -> filter: contrast(200%);
///     blur           -> filter: blur(2px);
///
/// @param {string} $type - type of filter
/// @param {percentage|decimal} $amount - filter amount
/// @group general
@mixin filter($type, $amount) {
    -webkit-filter: $type+unquote('(#{$amount})');
    -moz-filter: $type+unquote('(#{$amount})');
    -ms-filter: $type+unquote('(#{$amount})');
    -o-filter: $type+unquote('(#{$amount})');
    filter: $type+unquote('(#{$amount})');
}

/// Apply box shadow to element.
/// @example scss
///     @include(box-shadow(2px, 2px, 2px, 1px, rgba(0, 0, 0, 0.2))
///
/// @param {length} $top - shadow offset y
/// @param {length} $left - shadow offset x
/// @param {length} $blur - blur size
/// @param {color} $color - shadow color
/// @param {boolean} $inset [false] - if true, shadow is inside element frame
/// @group general
@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow: inset $top $left $blur $color;
        -moz-box-shadow: inset $top $left $blur $color;
        box-shadow: inset $top $left $blur $color;
    }

    @else {
        -webkit-box-shadow: $top $left $blur $color;
        -moz-box-shadow: $top $left $blur $color;
        box-shadow: $top $left $blur $color;
    }
}

/// Apply border radius to element.
/// @example scss
///     @include(border-radius(20))
///
/// @param {length} $top-left-radius - either the radius of the border for all corners, or the top-left corner value if others specified
/// @param {length} $top-right [null] - top-right corner value
/// @param {length} $bottom-right [null] - bottom-right corner value
/// @param {length} $bottom-left [null] - bottom-left corner value
/// @group general
@mixin border-radius($top-left-radius, $top-right: null, $bottom-right: null, $bottom-left: null) {

    -webkit-border-radius: $top-left-radius $top-right $bottom-right $bottom-left;
    -moz-border-radius: $top-left-radius $top-right $bottom-right $bottom-left;
    -ms-border-radius: $top-left-radius $top-right $bottom-right $bottom-left;
    border-radius: $top-left-radius $top-right $bottom-right $bottom-left;

}

/// Create a circular background via radial-gradient.
/// @example scss
///     @include(circlular-background(#fff);
///
/// @param {color} $color - color of circle
/// @group general
@mixin circular-background($color) {

    background: -moz-radial-gradient(center, ellipse cover, $color 1%, $color 70%, white 1%);
    background: -webkit-radial-gradient(center, ellipse cover, $color 1%, $color 70%, white 1%);
    background: radial-gradient(ellipse at center, $color 1%, $color 70%, white 1%);
}

/// Create inline URL to Cloudinary-hosted image with any specified transforms.
/// @example scss
///     background-image: cdn-image('bg/home-bg', f_auto, c_scale, w_1280)
///
/// @group general
@function cdn-image($imgName, $options...) {

    $imgParams: ();
    $version: random(500000) + 10000000;
    $strPrefix: "https://res.cloudinary.com/#{$cloudinary-account}/image/upload/";

    @each $value in $options {
        $strPrefix: $strPrefix + ","+ $value;
    }

    @return url("#{$strPrefix}/v#{$version}/#{$cdn-product}/#{$imgName}");
}

// Helper classes

.small {
    font-size: small;
}

.xx-large {
    font-size: xx-large;
}

.uppercase {
    text-transform: uppercase;
}

.center {
    text-align: center;
}

.no-margin {
    margin: 0;
}

.no-pad {
    padding: 0;
}

.hidden {
    display: none;
}

/// Hide element on all screens larger than tablet.
/// @example html
///  <div class="hidden-desktop"></div>
///
/// @group helpers
.hidden-desktop {
    @include mq($from: tablet) {
        display: none;
    }
}

.hidden-tablet-plus {
    @include mq($from: tabletPortrait) {
        display: none;
    }
}

.hidden-mobile {
    @include mobile-only {
        display: none;
    }
}

.hidden-not-mobile {
    @include mq($from: mobileLg) {
        display: none;
    }
}